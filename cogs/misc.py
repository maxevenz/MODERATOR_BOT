import random
import discord


class Choice(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.value = None

    @discord.ui.button(label="–û—Ä–µ–ª", style=discord.ButtonStyle.blurple)
    async def confirm(
        self, button: discord.ui.Button, interaction: discord.Interaction
    ):
        self.value = "–æ—Ä–µ–ª"
        self.stop()

    @discord.ui.button(label="–†–µ—à–∫–∞", style=discord.ButtonStyle.blurple)
    async def cancel(self, button: discord.ui.Button, interaction: discord.Interaction):
        self.value = "—Ä–µ—à–∫–∞"
        self.stop()


class RockPaperScissors(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(
                label="–ù–æ–∂–Ω–∏—Ü—ã", description="–í—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ –Ω–æ–∂–Ω–∏—Ü—ã.", emoji="‚úÇ"
            ),
            discord.SelectOption(
                label="–ö–∞–º–µ–Ω—å", description="–í—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ –∫–∞–º–µ–Ω—å.", emoji="ü™®"
            ),
            discord.SelectOption(
                label="–ë—É–º–∞–≥–∞", description="–í—ã –≤—ã–±–∏—Ä–∞–µ—Ç–µ –±—É–º–∞–≥—É.", emoji="üßª"
            ),
        ]
        super().__init__(
            placeholder="–í—ã–±–æ—Ä –∑–∞ –≤–∞–º–∏...",
            min_values=1,
            max_values=1,
            options=options,
        )

    async def callback(self, interaction: discord.Interaction):
        choices = {
            "–∫–∞–º–µ–Ω—å": 0,
            "–±—É–º–∞–≥–∞": 1,
            "–Ω–æ–∂–Ω–∏—Ü—ã": 2,
        }
        user_choice = self.values[0].lower()
        user_choice_index = choices[user_choice]

        bot_choice = random.choice(list(choices.keys()))
        bot_choice_index = choices[bot_choice]

        result_embed = discord.Embed(color=0x9C84EF)
        result_embed.set_author(
            name=interaction.user.name, icon_url=interaction.user.avatar.url
        )

        if user_choice_index == bot_choice_index:
            if user_choice_index == 1:
                user_choice = '–±—É–º–∞–≥—É'
            if bot_choice_index == 1:
                bot_choice = '–±—É–º–∞–≥—É'
            result_embed.description = f"**–ù–∏—á—å—è!**\n–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∏ —è —Ç–æ–∂–µ –≤—ã–±—Ä–∞–ª {bot_choice}."
            result_embed.colour = 0xF59E42
        elif user_choice_index == 0 and bot_choice_index == 2:
            result_embed.description = f"**–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!**\n–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∞ —è {bot_choice}."
            result_embed.colour = 0x32CD32
        elif user_choice_index == 1 and bot_choice_index == 0:
            user_choice = '–±—É–º–∞–≥—É'
            result_embed.description = f"**–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!**\n–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∞ —è {bot_choice}."
            result_embed.colour = 0x32CD32
        elif user_choice_index == 2 and bot_choice_index == 1:
            result_embed.description = f"**–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!**\n–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∞ —è {bot_choice}."
            result_embed.colour = 0x32CD32
        else:
            if user_choice_index == 1:
                user_choice = '–±—É–º–∞–≥—É'
            if bot_choice_index == 1:
                bot_choice = '–±—É–º–∞–≥—É'
            result_embed.description = (
                f"**–Ø –≤—ã–∏–≥—Ä–∞–ª!**\n–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∞ —è {bot_choice}."
            )
            result_embed.colour = 0xE02B2B
            # –Ω–µ –∑–Ω–∞—é –ø–æ—á–µ–º—É –Ω–∏–∂–µ –ø–∞–π—á–∞—Ä–º –≤—ã–¥–µ–ª—è–µ—Ç –æ—à–∏–±–∫—É, –≤—Å–µ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∏ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å –Ω–∞ –º–µ—Å—Ç–µ
        await interaction.response.edit_message(
            embed=result_embed, content=None, view=None
        )


class RockPaperScissorsView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(RockPaperScissors())
